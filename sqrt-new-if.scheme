(define (sqrt x)
 (define (new-if predicate then-clause else-clause)
  (cond (predicate then-clause)
   		(else else-clause)))
 (define (good-enough? guess)
  (< (abs (- (square guess) x)) 0.001))
 (define (improve guess)
	(average guess (/ x guess)))
 (define (average a b)
  (/ (+ a b) 2))
 (define (sqrt-iter guess)
	(new-if (good-enough? guess)
	 		guess
			(sqrt-iter (improve guess))))
 (sqrt-iter 1.0))
